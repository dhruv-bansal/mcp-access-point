# pingora config example from https://github.com/cloudflare/pingora/blob/main/docs/user_guide/conf.md
pingora:
  version: 1
  threads: 2
  pid_file: /run/pingora.pid
  upgrade_sock: /tmp/pingora_upgrade.sock
  user: nobody
  group: mcpusers

access_point:
  # listener on TCP or TLS
  listeners:
    - address: 0.0.0.0:8080 # listen on all interfaces
mcps:
  - id: service-1 # Service identifier
    upstream_id: 1 # Upstream service identifier (must be the same as upstream id in upstreams)
    path: config/openapi_for_demo_patch1.json # Local OpenAPI file path
    upstream: # Upstream service configuration must be defined
      headers: # Headers to send to upstream service
        X-API-Key: "12345-abcdef"        # API key
        Authorization: "Bearer token123" # Bearer token
        User-Agent: "MyApp/1.0"          # User agent
        Accept: "application/json"       # Accept header

  - id: service-2
    upstream_id: 2
    path: https://petstore.swagger.io/v2/swagger.json  # Supports remote OpenAPI files

  - id: service-3
    upstream_id: 3
    routes: # custom_routes
      - id: 1
        operation_id: get_weather # Operation identifier
        uri: /points/{latitude},{longitude} # Path to match (e.g., /api/v1/*)
        method: GET
        meta:
          name: get_weather
          description: get weather by latitude and longitude
          inputSchema: # Input schema validation (optional)
            type: object
            required:
              - latitude
              - longitude
            properties:
              latitude:
                type: number
                minimum: -90
                maximum: 90
              longitude:
                type: number
                minimum: -180
                maximum: 180

routes: # Route configuration must be defined
  - id: 1
    uri: /points/{orderId} # Path to match
    upstream_id: 3 # Upstream service identifier (must be the same as upstream id in upstreams)

upstreams: # Upstream service configuration must be defined
  - id: 1
    headers: # Headers to send to upstream service
      X-API-Key: "12345-abcdef"        # API key
      Authorization: "Bearer token123" # Bearer token
      User-Agent: "MyApp/1.0"          # User agent
      Accept: "application/json"       # Accept header
    nodes: #（e.g., a web server or API server)）
      "127.0.0.1:8090": 1 # address with weight
    type: roundrobin # Load balancing algorithm (roundrobin, random, ip_hash)

  - id: 2 # another upstream service 
    nodes: # if nodes is domains, pass_host must be rewrite, and upstream_host must be set to override host header
      "127.0.0.1:8091": 1
    type: roundrobin

  - id: 3 # another upstream service
    nodes:
      "api.weather.gov": 1
    type: roundrobin
    scheme: https # supports http and https
    pass_host: rewrite # set to rewrite to upstream_host, when nodes are domains
    upstream_host: api.weather.gov # set to override host header

# Global rules apply plugins to all matching requests
# global_rules:
#   - id: 1
#     plugins:
#       file-logger: {} # log to file